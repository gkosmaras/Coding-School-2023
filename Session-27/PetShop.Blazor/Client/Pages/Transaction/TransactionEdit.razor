@page "/transaction/edit/{Id:int?}"
@inject HttpClient httpClient
@inject NavigationManager navigationManager;
@using PetShop.Blazor.Shared.DTO.Pet;
@using PetShop.Blazor.Shared.DTO.PetFood;
@using PetShop.Blazor.Shared.DTO.Transaction;

@if (loading)
{
    <Spinner />
}
else
{

    @if (Id == null)
    {
        <PageTitle>New Transaction - Pet Shop Retail System</PageTitle>
        <h1 class="mb-5">New Transaction</h1>
    }
    else
    {
        <PageTitle>Edit Transaction @Transaction.Id - Pet Shop Retail System</PageTitle>
        <h1 class="mb-5">Edit Transaction {@Transaction.Id}</h1>
    }

    <div class="row">

        <div class="col-md-6 mb-3">
            <label class="form-label">Employee</label>
            <select class="form-select" @bind="Transaction.EmployeeId">
                @foreach (var employee in Transaction.Employees)
                {
                    <option value="@employee.Id">@employee.Name @employee.Surname</option>
                }
            </select>
        </div>

        <div class="col-md-6 mb-3">
            <label class="form-label">Customer</label>
            <select class="form-select" @bind="Transaction.CustomerId">
                @foreach (var customer in Transaction.Customers)
                {
                    <option value="@customer.Id">@customer.Name @customer.Surname</option>
                }
            </select>
        </div>

        <div class="col-md-6 mb-3">
            <label class="form-label">Pet</label>
            <select class="form-select" @bind="@Transaction.PetId">
                @foreach (var pet in Transaction.Pets)
                {
                    <option value="@pet.Id">@pet.Breed</option>
                }
            </select>
        </div>

        <div class="col-md-6 mb-3">
            <label class="form-label">Pet Food</label>
            <select class="form-select" @bind="@Transaction.PetFoodId">
                @foreach (var petFood in Transaction.PetFoods)
                {
                    <option value="@petFood.Id">@petFood.AnimalType</option>
                }
            </select>
        </div>

        <div class="col-md-6 mb-3">
            <label class="form-label">Pet Food Quantity</label>
            <input class="form-control" type="number" @bind="@Transaction.PetFoodQty" />
        </div>

    </div>

    <div class="row">
        <div class="col-md-6">
            <button class="btn btn-success" @onclick="OnSave">Save</button>
            <button class="btn btn-warning" @onclick="OnCancel">Cancel</button>
        </div>
    </div>

}

@code {

    [Parameter] public int? Id { get; set; }

    bool loading = true;

    TransactionEditDto? Transaction;

    protected override async Task OnInitializedAsync()
    {
        if (Id == null)
        {
            Transaction = new();
            Transaction.Customers = await httpClient.GetFromJsonAsync<List<CustomerEditDto>>("customer");
            Transaction.Employees = await httpClient.GetFromJsonAsync<List<EmployeeEditDto>>("employee");
            Transaction.Pets = await httpClient.GetFromJsonAsync<List<PetEditDto>>("pet");
            Transaction.Pets = Transaction.Pets.Where(x => x.PetStatus != PetStatus.Unhealthy).ToList();
            Transaction.PetFoods = await httpClient.GetFromJsonAsync<List<PetFoodEditDto>>("petfood");
        }
        else
        {
            Transaction = await httpClient.GetFromJsonAsync<TransactionEditDto>($"transaction/{Id}");
            Transaction.Customers = await httpClient.GetFromJsonAsync<List<CustomerEditDto>>("customer");
            Transaction.Employees = await httpClient.GetFromJsonAsync<List<EmployeeEditDto>>("employee");
            Transaction.Pets = await httpClient.GetFromJsonAsync<List<PetEditDto>>("pet");
            Transaction.Pets = Transaction.Pets.Where(x => x.PetStatus != PetStatus.Unhealthy).ToList();
            Transaction.PetFoods = await httpClient.GetFromJsonAsync<List<PetFoodEditDto>>("petfood");
        }
        loading = false;
    }

    private void OnCancel()
    {
        navigationManager.NavigateTo("transaction");
    }

    private async Task OnSave()
    {
        HttpResponseMessage? response = null;
        if (Id == null)
        {
            response = await httpClient.PostAsJsonAsync("transaction", Transaction);
        }
        else
        {
            response = await httpClient.PutAsJsonAsync("transaction", Transaction);
        }
        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("transaction");
    }

}
