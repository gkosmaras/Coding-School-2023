@page "/customer/edit/{Id:int?}"
@inject HttpClient httpClient
@inject NavigationManager navigationManager

@if (Customer == null)
{
    <Spinner />
}
else
{

    @if (Id == null)
    {
        <PageTitle>New Customer - Pet Shop Retail System</PageTitle>
        <h1 class="mb-5">New Customer</h1>
    }
    else
    {
        <PageTitle>Edit Customer - Pet Shop Retail System</PageTitle>
        <h1 class="mb-5">Edit Customer</h1>
    }

    <div class="row">

        <div class="col-md-6 mb-3">
            <label class="form-label">Name</label>
            <input class="form-control" type="text" placeholder="Enter customer's name" @bind=@Customer.Name required/>
        </div>

        <div class="col-md-6 mb-3">
            <label class="form-label">Surname</label>
            <input class="form-control" type="text" placeholder="Enter customer's surname" @bind=@Customer.Surname required />
        </div>

        <div class="col-md-6 mb-3">
            <label class="form-label">Phone</label>
            <input class="form-control" type="text" placeholder="Enter customer's phone" @bind=@Customer.Phone />
        </div>

        <div class="col-md-6 mb-3">
            <label class="form-label">TIN</label>
            <input class="form-control" type="text" placeholder="Enter customer's TIN" @bind=@Customer.Tin required />
        </div>

    </div>

    <div class="row">
        <div class="col-md-6">
            <button class="btn btn-success" @onclick="OnSave">Save</button>
            <button class="btn btn-warning" @onclick="OnCancel">Cancel</button>
        </div>
    </div>

    <style>
        input:required:valid {
            border-color: green;
            border-width: 3px;
        }

            input:required:invalid {
                border-color: #c00000;
            border-width: 5px;
            }
    </style>
}

@code {

    [Parameter] public int? Id { get; set; }

    CustomerEditDto? Customer { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id == null)
        {
            Customer = new();
        }
        else
        {
            Customer = await httpClient.GetFromJsonAsync<CustomerEditDto>($"customer/{Id}");
        }
    }

    private void OnCancel()
    {
        navigationManager.NavigateTo("customer");
    }

    private async Task OnSave()
    {
        HttpResponseMessage? response = null;
        if (Id == null)
        {
            response = await httpClient.PostAsJsonAsync("customer", Customer);
        }
        else
        {
            response = await httpClient.PutAsJsonAsync("customer", Customer);
        }
        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("customer");
    }

}
