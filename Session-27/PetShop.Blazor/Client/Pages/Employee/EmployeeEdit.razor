@page "/employee/edit/{id:int?}"
@inject HttpClient httpClient
@inject NavigationManager navigationManager

@if (Employee == null)
{
    <Spinner />
}
else
{
    @if (Id == null)
    {
        <PageTitle>New Employee - Pet Shop Retail System</PageTitle>
        <h1 class="mb-5">New Employee</h1>
    }
    else
    {
        <PageTitle>Edit Employee - Pet Shop Retail System</PageTitle>
        <h1 class="mb-5">Edit Employee</h1>
    }

    <div class="row">

        <div class="col-md-6 mb-3">
            <label class="form-label">Name</label>
            <input class="form-control" type="text" placeholder="Enter employee's name" @bind=@Employee.Name />
        </div>

        <div class="col-md-6 mb-3">
            <label class="form-label">Surname</label>
            <input class="form-control" type="text" placeholder="Enter employee's surname" @bind=@Employee.Surname />
        </div>

        <div class="col-md-6 mb-3">
            <label class="form-label">Type of Employee</label>
            <select class="form-select" placeholder="Enter employee's name" @bind="Employee.EmployeeType">
                @foreach (var enumValue in Enum.GetValues<EmployeeType>())
                {
                    <option value="@enumValue">@enumValue</option>
                }
            </select>
        </div>

        <div class="col-md-6 mb-3">
            <label class="form-label">Monthly Salary</label>
            <input class="form-control" type="number" placeholder="Enter employee's salary" @bind=@Employee.SalaryPerMonth />
        </div>

    </div>

    <div class="row">
        <div class="col-md-6">
            <button class="btn btn-success" @onclick="OnSave">Save</button>
            <button class="btn btn-warning" @onclick="OnCancel">Cancel</button>
        </div>
    </div>
}

@code {

    [Parameter] public int? Id { get; set; }

    EmployeeEditDto? Employee { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id == null)
        {
            Employee = new();
        }
        else
        {
            Employee = await httpClient.GetFromJsonAsync<EmployeeEditDto>($"employee/{Id}");
        }
    }

    private void OnCancel()
    {
        navigationManager.NavigateTo("employee");
    }

    private async Task OnSave()
    {
        HttpResponseMessage? response = null;
        if (Id == null)
        {
            response = await httpClient.PostAsJsonAsync("employee", Employee);
        }
        else
        {
            response = await httpClient.PutAsJsonAsync("employee", Employee);
        }
        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("employee");
    }

}
