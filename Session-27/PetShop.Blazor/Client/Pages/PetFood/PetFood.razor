@using PetShop.Models;
@using PetShop.Models.Enums;
@using PetShop.Blazor.Shared.DTO.PetFood;

@page "/petfood"
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime

<PageTitle>Pet Food - Pet Shop Retail System</PageTitle>

@if (isLoading)
{
    <Spinner />
}
else
{

    <h1 class="mb-5">Pet Food</h1>

    <button class="btn btn-primary mb-5" @onclick="CreateItem">Add new pet food</button>

    <div class="table-responsive">

        <table class="table table-dark table-striped">

            <thead>

                <tr>
                    <th>Animal Type</th>
                    <th>Price</th>
                    <th>Cost</th>
                    <th>Actions</th>
                </tr>

            </thead>

            <tbody>

                @foreach (var petFood in petFoods)
                {
                    <tr>
                        <td>@petFood.AnimalType</td>
                        <td>@petFood.Price</td>
                        <td>@petFood.Cost</td>
                        <td>
                            <button class="btn btn-warning" @onclick="()=> EditItem(petFood)">Edit</button>
                            <button class="btn btn-danger" @onclick="()=> DeleteItem(petFood)">Delete</button>
                        </td>
                    </tr>
                }

            </tbody>

        </table>

    </div>

}

@code {
    private List<PetFoodDto> petFoods = new();

    bool isLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadItemsFromServer();
        isLoading = false;
    }

    private async Task LoadItemsFromServer()
    {
        petFoods = await httpClient.GetFromJsonAsync<List<PetFoodDto>>("petfood");
    }

    private void CreateItem()
    {
        navigationManager.NavigateTo("petfood/edit");
    }

    private void EditItem(PetFoodDto petFood)
    {
        navigationManager.NavigateTo($"petfood/edit/{petFood.Id}");
    }

    private async Task DeleteItem(PetFoodDto petFood)
    {
        var confirm = await jsRuntime.InvokeAsync<bool>("confirm", "Delete Item. Are you sure?");
        if (confirm)
        {
            var response = await httpClient.DeleteAsync($"petfood/{petFood.Id}");
            response.EnsureSuccessStatusCode();
            await LoadItemsFromServer();
        }
    }
}
