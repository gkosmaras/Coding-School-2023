@using PetShop.Models;
@using PetShop.Models.Enums;
@using PetShop.Blazor.Shared.DTO.PetFood;

@page "/petfood/edit/{Id:int?}"

@inject HttpClient httpClient
@inject NavigationManager navigationManager

@if (PetFood == null)
{
    <Spinner />
}
else
{
    @if (Id == null)
    {
        <PageTitle>New Pet Food - Pet Shop Retail System</PageTitle>
        <h1 class="mb-5">New Pet Food</h1>
    }
    else
    {
        <PageTitle>Edit Pet Food - Pet Shop Retail System</PageTitle>
        <h1 class="mb-5">Edit Pet Food</h1>
    }

    <EditForm Model="PetFood" OnValidSubmit="OnSave">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="row">

            <div class="col-md-6 mb-3">
                <label class="form-label">Animal Type</label>
                <InputSelect class="form-select" placeholder="Enter a type of animal" @bind-Value="PetFood.AnimalType">
                    @foreach (var enumValue in Enum.GetValues<AnimalType>())
                    {
                        <option value="@enumValue">@enumValue</option>
                    }
                </InputSelect>
            </div>

            <div class="col-md-6 mb-3">
                <label class="form-label">Price</label>
                <InputNumber class="form-control" type="number" placeholder="Enter pet food's price" @bind-Value=@PetFood.Price/>
            </div>

            <div class="col-md-6 mb-3">
                <label class="form-label">Cost</label>
                <InputNumber class="form-control" type="number" placeholder="Enter pet food's cost" @bind-Value=@PetFood.Cost/>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <button class="btn btn-success" type="submit">Save</button>
                <button class="btn btn-warning" @onclick="OnCancel">Cancel</button>
            </div>
        </div>
    </EditForm>
}


@code {

    [Parameter] public int? Id { get; set; }

    PetFoodEditDto? PetFood { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id == null)
        {
            PetFood = new();
        }
        else
        {
            PetFood = await httpClient.GetFromJsonAsync<PetFoodEditDto>($"petfood/{Id}");
        }
    }

    private void OnCancel()
    {
        navigationManager.NavigateTo("petfood");
    }

    private async Task OnSave()
    {
        HttpResponseMessage? response = null;
        if (Id == null)
        {
            response = await httpClient.PostAsJsonAsync("petfood", PetFood);
        }
        else
        {
            response = await httpClient.PutAsJsonAsync("petfood", PetFood);
        }

        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("petfood");
    }

}
