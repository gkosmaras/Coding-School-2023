@page "/customer/edit/{Id:int?}"
@using FuelStation.Web.Blazor.Shared.DTO;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@layout CashierLayout

@if (Customer == null)
{
    <div class="spinner-grow" role="status">
        <span class="sr-only"></span>
    </div>
}
else
{

    @if (Id == null)
    {
        <PageTitle>New Customer - Fuel Station Retail System</PageTitle>
        <h1 class="mb-5">New Customer</h1>
    }
    else
    {
        <PageTitle>Edit Customer - Fuel Station Retail System</PageTitle>
        <h1 class="mb-5">Edit Customer</h1>
    }

    <EditForm Model="Customer" OnValidSubmit="OnSave">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row">

            <div class="col-md-6 mb-3">
                <label class="form-label">Name</label>
                <InputText class="form-control" type="text" @bind-Value=@Customer.Name />
            </div>

            <div class="col-md-6 mb-3">
                <label class="form-label">Surname</label>
                <InputText class="form-control" type="text" @bind-Value=@Customer.Surname />
            </div>

        </div>

        <div class="row">
            <div class="col-md-6">
                <button class="btn btn-success" type="submit">Save</button>
                <button class="btn btn-warning" @onclick="OnCancel">Cancel</button>
            </div>
        </div>
    </EditForm>

}

@code {

    [Parameter] public int? Id { get; set; }

    CustomerEditDto? Customer { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id == null)
        {
            Customer = new();
        }
        else
        {
            Customer = await httpClient.GetFromJsonAsync<CustomerEditDto>($"customer/{Id}");
        }
    }

    private void OnCancel()
    {
        navigationManager.NavigateTo("customer");
    }

    private async Task OnSave()
    {
        HttpResponseMessage? response = null;
        if (Id == null)
        {
            response = await httpClient.PostAsJsonAsync("customer", Customer);
        }
        else
        {
            response = await httpClient.PutAsJsonAsync("customer", Customer);
        }
        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("customer");
    }

}