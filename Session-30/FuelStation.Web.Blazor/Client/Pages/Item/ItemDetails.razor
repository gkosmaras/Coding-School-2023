@page "/item/detail/{id:int?}"
@using FuelStation.Web.Blazor.Shared.DTO;
@layout StaffLayout
@inject HttpClient httpClient
@inject NavigationManager navigationManager

@if (loading)
{
    <div class="spinner-grow" role="status">
        <span class="sr-only"></span>
    </div>
}
else
{
    <PageTitle>Product @Item.Description - Fuel Station Retail System</PageTitle>

    <h1 class="mb-5">Details for item: @Item.Description @Item.Code</h1>

    <div class="row mb-5">
        <div><strong>Price:</strong> @Item.Price</div>
        <div><strong>Cost:</strong> @Item.Cost</div>
    </div>

    <h2 class="mb-3">Transactions</h2>

    <div class="table-responsive">

        <table class="table table-dark table-striped">

            <thead>
                <tr>
                    <th>Quantity</th>
                    <th>Discount</th>
                    <th>Total Value</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var trans in transLine)
                {
                    <tr>
                        <td>@trans.Quantity</td>
                        <td>@trans.DiscountValue</td>
                        <td>@trans.TotalValue</td>
                    </tr>
                }
            </tbody>

        </table>

    </div>

    <button class="btn btn-secondary" @onclick="OnCancel">Back</button>
}

@code {

    bool loading { get; set; } = true;

    [Parameter] public int? Id { get; set; }

    ItemEditDto? Item { get; set; }
    private List<TransactionLineEditDto> transLine = new();

    protected override async Task OnInitializedAsync()
    {
        Item = await httpClient.GetFromJsonAsync<ItemEditDto>($"item/{Id}");
        var temp = await httpClient.GetFromJsonAsync<List<TransactionLineEditDto>>("transactionLine");
        transLine = temp.Where(x => x.ItemID == Id).ToList();
        loading = false;
    }

    private void OnCancel()
    {
        navigationManager.NavigateTo("item");
    }

}
